{"version":3,"sources":["components/Header.jsx","components/WebsiteInfoSearcher.jsx","App.js","index.js"],"names":["Header","className","id","to","WebsiteInfoSearcher","useState","domainName","setDomainName","searchResult","setSearchResult","handleSubmit","e","a","preventDefault","submitBtn","document","getElementsByName","submitBtnText","getElementById","disabled","style","cursor","opacity","innerHTML","url","fetch","res","status","alert","focus","json","data","onSubmit","type","name","value","onChange","target","placeholder","colSpan","WhoisRecord","registrant","organization","Date","registryData","expiresDateNormalized","toDateString","toLocaleTimeString","ips","join","location","city","region","country","DNSData","dnsRecords","filter","record","dnsType","map","address","App","exact","ReactDOM","render","StrictMode"],"mappings":"2QAceA,EAVA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,cAAC,IAAD,CAASC,GAAG,QAAQC,GAAG,IAAvB,gC,iCCoGSC,G,MAxGa,WAC1B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAMMC,EAAY,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACnBD,EAAEE,iBACEC,EAAYC,SAASC,kBAAkB,aAAa,GACpDC,EAAgBF,SAASG,eAAe,iBAE5CJ,EAAUK,UAAW,EACrBL,EAAUM,MAAMC,OAAS,cACzBP,EAAUM,MAAME,QAAU,KAC1BL,EAAcM,UAAY,aACpBC,EATa,uCASyBlB,GATzB,UAUDmB,MAAMD,GAVL,WAWA,OADbE,EAVa,QAWXC,OAXW,iBAYjBC,MAAM,yBACNb,SAASC,kBAAkB,cAAc,GAAGa,QAb3B,+BAejBtB,EAAc,IAfG,UAgBEmB,EAAII,OAhBN,QAgBXC,EAhBW,OAiBjBtB,EAAgBsB,GAjBC,QAmBnBjB,EAAUK,UAAW,EACrBL,EAAUM,MAAMC,OAAS,UACzBP,EAAUM,MAAME,QAAU,IAC1BL,EAAcM,UAAY,aAtBP,4CAAH,sDAwBlB,OACE,qCACE,sBAAKtB,UAAU,sBAAf,UACE,oBAAIA,UAAU,cAAd,0CACA,uBAAMA,UAAU,wBAAwB+B,SAAUtB,EAAlD,UACE,uBACEuB,KAAK,OACLC,KAAK,aACLC,MAAO7B,EACP8B,SArCU,SAACzB,GACnBJ,EAAcI,EAAE0B,OAAOF,QAqCfG,YAAY,uBAEd,wBAAQJ,KAAK,YAAYD,KAAK,SAA9B,SACE,sBAAM/B,GAAG,gBAAT,gCAKN,qBAAKD,UAAU,sBAAf,SACGO,EACC,mCACE,wBAAOP,UAAU,eAAjB,UACE,gCACE,6BACE,oBAAIsC,QAAQ,IAAZ,SACE,+BAAO/B,EAAagC,YAAYlC,mBAItC,kCACE,+BACE,8CACA,6BAAKE,EAAagC,YAAYC,WAAWC,kBAE3C,+BACE,yCACA,6BAAK,IAAIC,KAAKnC,EAAagC,YAAYI,aAAaC,uBAAuBC,eAAiB,KAAO,IAAIH,KAAKnC,EAAagC,YAAYI,aAAaC,uBAAuBE,0BAE3K,+BACE,4CACA,6BAAKvC,EAAagC,YAAYQ,IAAIC,KAAK,cAEzC,+BACE,8CACA,uCAAQzC,EAAa0C,SAASC,KAA9B,aAAuC3C,EAAa0C,SAASE,OAA7D,cAAyE5C,EAAa0C,SAASG,QAA/F,UAGE7C,EAAa8C,QAAQC,WAAWC,QAAO,SAACC,GACpC,MAAwB,MAAjBA,EAAOC,SAAkC,OAAjBD,EAAOC,SAAmC,SAAjBD,EAAOC,SAAqC,UAAjBD,EAAOC,WAC3FC,KAAI,SAACF,GACJ,IAAItB,EAAwB,OAAjBsB,EAAOC,QAAiBD,EAAOpB,OAASoB,EAAOG,QAC1D,OACI,mCACI,+BACI,6BAAKH,EAAOC,UACZ,6BAAKvB,MAFAA,gBAY/B,oCCjFK0B,MAff,WACE,OACE,mCACA,eAAC,IAAD,WACI,cAAC,EAAD,IACF,cAAC,IAAD,UACE,cAAC,IAAD,CAAO1D,GAAG,IAAI2D,OAAK,EAAnB,SACE,cAAC,EAAD,cCNVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASG,eAAe,W","file":"static/js/main.39d89fe3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/Header.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <NavLink id=\"title\" to=\"/\">\r\n        SuperCoolWebapp\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport \"../css/WebsiteInfoSearcher.css\";\r\n\r\nconst WebsiteInfoSearcher = () => {\r\n  const [domainName, setDomainName] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState(null);\r\n\r\n  const handleInput = (e) => {\r\n    setDomainName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let submitBtn = document.getElementsByName(\"submitBtn\")[0];\r\n    let submitBtnText = document.getElementById(\"submitBtnText\");\r\n\r\n    submitBtn.disabled = true;\r\n    submitBtn.style.cursor = \"not-allowed\";\r\n    submitBtn.style.opacity = \".9\";\r\n    submitBtnText.innerHTML = \"Loading...\";\r\n    const url = `/get-website-data?domainName=${domainName}`;\r\n    const res = await fetch(url);\r\n    if (res.status !== 200) {\r\n      alert(\"Something went wrong!\");\r\n      document.getElementsByName('domainName')[0].focus();\r\n    } else {\r\n      setDomainName(\"\");\r\n      const data = await res.json();\r\n      setSearchResult(data);\r\n    }\r\n    submitBtn.disabled = false;\r\n    submitBtn.style.cursor = \"pointer\";\r\n    submitBtn.style.opacity = \"1\";\r\n    submitBtnText.innerHTML = \"Fetch Info\";\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container hv-center\">\r\n        <h1 className=\"text-center\">Website Information Searcher</h1>\r\n        <form className=\"hv-center search-form\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"domainName\"\r\n            value={domainName}\r\n            onChange={handleInput}\r\n            placeholder=\"Enter Website Name\"\r\n          />\r\n          <button name=\"submitBtn\" type=\"submit\">\r\n            <span id=\"submitBtnText\">Fetch Info</span>\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"hv-center container\">\r\n        {searchResult ? (\r\n          <>\r\n            <table className=\"result-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th colSpan=\"2\">\r\n                    <span>{searchResult.WhoisRecord.domainName}</span>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th>Organization</th>\r\n                  <td>{searchResult.WhoisRecord.registrant.organization}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Expires</th>\r\n                  <td>{new Date(searchResult.WhoisRecord.registryData.expiresDateNormalized).toDateString() + ', ' + new Date(searchResult.WhoisRecord.registryData.expiresDateNormalized).toLocaleTimeString()}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>IP address</th>\r\n                  <td>{searchResult.WhoisRecord.ips.join('  ,  ')}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Geo Location</th>\r\n                  <td>{`${searchResult.location.city}, ${searchResult.location.region} - ${searchResult.location.country}.`}</td>\r\n                </tr>\r\n                {\r\n                    searchResult.DNSData.dnsRecords.filter((record)=>{\r\n                        return record.dnsType===\"A\" || record.dnsType===\"NS\" || record.dnsType===\"AAAA\" || record.dnsType===\"CNAME\"\r\n                    }).map((record)=>{\r\n                        let value= record.dnsType===\"NS\" ? record.target : record.address;\r\n                        return(\r\n                            <>\r\n                                <tr key={value}>\r\n                                    <th>{record.dnsType}</th>\r\n                                    <td>{value}</td>\r\n                                </tr>\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WebsiteInfoSearcher;\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport WebsiteInfoSearcher from './components/WebsiteInfoSearcher';\n\nfunction App() {\n  return (\n    <>\n    <BrowserRouter>\n        <Header/>\n      <Switch>\n        <Route to=\"/\" exact>\n          <WebsiteInfoSearcher/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './css/index.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}